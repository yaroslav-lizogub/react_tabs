{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","length","map","classNames","href","onClick","selectTabHandler","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uLAUaA,EAAkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC/CC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACE,gCACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,QAAUR,EAAKS,KAAI,SAAAJ,GAAG,OAC1B,oBACEE,UAAWG,IACT,CAAE,YAAaL,EAAIC,KAAOH,EAAYG,KAF1C,SAME,mBAAGK,KAAI,WAAMN,EAAIC,IAAMM,QAAS,kBAjBnB,SAACP,GACpBA,EAAIC,KAAOL,GACbC,EAAcG,GAegCQ,CAAiBR,IAAvD,SAA8DA,EAAIS,SAF7DT,EAAIC,WAQjB,qBAAKC,UAAU,QAAQ,UAAQ,cAA/B,SACGJ,EAAYY,cChCRf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOG,EAAP,KAAoBe,EAApB,KAEA,OACE,sBAAKX,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGJ,EAAYW,SAGf,8BACE,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAAegB,UCtBzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.482893f4.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const selectTabHandler = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.length && tabs.map(tab => (\n            <li\n              className={classNames(\n                { 'is-active': tab.id === selectedTab.id },\n              )}\n              key={tab.id}\n            >\n              <a href={`#${tab.id}`} onClick={() => selectTabHandler(tab)}>{tab.title}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <div>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={setSelectedTab}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}